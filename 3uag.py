# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/103_aV-3e8mGLQeokcIUFFxd1Jwy2Hv1E
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

sns.set(style='white', context='notebook', rc={'figure.figsize':(14,10)})

penguins = pd.read_csv("https://github.com/allisonhorst/palmerpenguins/raw/5b5891f01b52ae26ad8cb9755ec93672f49328a8/data/penguins_size.csv")
penguins.head()

cmy = pd.read_csv("https://raw.githubusercontent.com/Tastingor/UMAP/main/3uag-chain%2Bxyz.csv")
cmy.head()

penguins = penguins.dropna()
penguins.species_short.value_counts()

cmy.chain.value_counts()

sns.pairplot(penguins, hue='species_short')

sns.pairplot(cmy, hue='chain')

import umap

reducer = umap.UMAP()

penguin_data = penguins[
    [
        "culmen_length_mm",
        "culmen_depth_mm",
        "flipper_length_mm",
        "body_mass_g",
    ]
].values
scaled_penguin_data = StandardScaler().fit_transform(penguin_data)

cmy_data = cmy[
    [
        "x",
        "y",
        "z",
    ]
].values
scaled_cmy_data = StandardScaler().fit_transform(cmy_data)

embedding = reducer.fit_transform(scaled_penguin_data)
embedding.shape

embedding = reducer.fit_transform(scaled_cmy_data)
embedding.shape

plt.scatter(
    embedding[:, 0],
    embedding[:, 1],
    c=[sns.color_palette()[x] for x in penguins.species_short.map({"Adelie":0, "Chinstrap":1, "Gentoo":2})])
plt.gca().set_aspect('equal', 'datalim')
plt.title('UMAP projection of the Penguin dataset', fontsize=24)

plt.scatter(
    embedding[:, 0],
    embedding[:, 1],
    c=[sns.color_palette()[x] for x in cmy.chain.map({"x":0, "y":1, "z":2})])
plt.gca().set_aspect('equal', 'datalim')
plt.title('2d of 3uag', fontsize=24)